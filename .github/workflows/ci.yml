name: ci

on:
  push:
    branches: [main]
    tags: ["**"]
  pull_request:
    branches: [main]
  merge_group:
    branches: [main]
  workflow_call:
  workflow_dispatch:

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}

jobs:
  python:
    permissions:
      contents: read

    runs-on: ubuntu-latest
    env:
      SCRIPT_NAME: merge_requirements.py
      UV_NO_SYNC: 1
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6

      - id: setup-python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5

      - run: |
          uv sync --script "${SCRIPT_NAME}"
          uv pip list
          uv run "${SCRIPT_NAME}"

      - run: docker compose run --rm update-requirements

  docker:
    permissions:
      contents: write
      packages: write
      security-events: write

    runs-on: ubuntu-latest
    env:
      BASE_IMAGE: ubuntu:24.04
      DATABRICKS_RUNTIME_VERSION: 16.4
      GHCR_IMAGE_NAME: ghcr.io/${{ github.repository }}
      PYTHON_VERSION: 3.12

    steps:
      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
            DATABRICKS_RUNTIME_VERSION=${{ env.DATABRICKS_RUNTIME_VERSION }}
            PYTHON_VERSION=${{ env.PYTHON_VERSION }}
          cache-from: ${{ env.GHCR_IMAGE_NAME }}:cache
          load: true

      - uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30
        with:
          image-ref: ${{ env.IMAGE_ID}}
          ignore-unfixed: true
          severity: HIGH,CRITICAL
          format: github
          output: dependency-results.sbom.json
          github-pat: ${{ github.token }}
        env:
          IMAGE_ID: ${{ steps.build.outputs.imageid }}

      - uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30
        with:
          image-ref: ${{ env.IMAGE_ID}}
          ignore-unfixed: true
          severity: HIGH,CRITICAL
          format: sarif
          output: trivy-results.sarif
        env:
          IMAGE_ID: ${{ steps.build.outputs.imageid }}

      - uses: github/codeql-action/upload-sarif@ff0a06e83cb2de871e5a09832bc6a81e7276941f # v3
        with:
          sarif_file: trivy-results.sarif

      - id: docker_metadata
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: ${{ env.GHCR_IMAGE_NAME }}

      - if: ${{ github.event_name == 'push' || github.ref_name == github.event.repository.default_branch }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - if: ${{ github.event_name == 'push' || github.ref_name == github.event.repository.default_branch }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
            DATABRICKS_RUNTIME_VERSION=${{ env.DATABRICKS_RUNTIME_VERSION }}
            PYTHON_VERSION=${{ env.PYTHON_VERSION }}
          cache-from: ${{ env.GHCR_IMAGE_NAME }}:cache
          cache-to: type=registry,ref=${{ env.GHCR_IMAGE_NAME }}:cache,mode=max
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}
          annotations: ${{ steps.docker_metadata.outputs.annotations }}
          push: ${{ github.event_name == 'push' || github.ref_name == github.event.repository.default_branch }}
